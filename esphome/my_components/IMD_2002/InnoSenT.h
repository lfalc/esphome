#pragma once

#define IMD2002_MAX_TARGETS (15)

namespace esphome {
namespace IMD_2002 {

typedef enum {
  IMD2002_API_ERR_OK = 0x0000,
  IMD2002_API_ERR_FUNCTION_DEPRECATED,
  IMD2002_API_ERR_DLL_NOT_FINISHED,
  IMD2002_API_ERR_HANDLE_NOT_INITIALIZED,
  IMD2002_API_ERR_COMPORT_DOESNT_EXIST,
  IMD2002_API_ERR_COMPORT_CANT_INITIALIZE,
  IMD2002_API_ERR_COMPORT_ACCESS_DENIED,
  IMD2002_API_ERR_COMPORT_BAUDRATE_NOT_VALID,
  IMD2002_API_ERR_COMPORT_CANT_OPEN,
  IMD2002_API_ERR_COMPORT_CANT_SET_FLOW_CONTROL,
  IMD2002_API_ERR_COMPORT_CANT_SET_PARITY,
  IMD2002_API_ERR_COMPORT_CANT_SET_STOP_BITS,
  IMD2002_API_ERR_COMPORT_CANT_SET_DATA_BITS,
  IMD2002_API_ERR_COMPORT_CANT_SET_BAUDRATE,
  IMD2002_API_ERR_COMPORT_ALREADY_INITIALIZED,
  IMD2002_API_ERR_COMPORT_EQUALS_NULL,
  IMD2002_API_ERR_COMPORT_NOT_OPEN,
  IMD2002_API_ERR_COMPORT_NOT_READABLE,
  IMD2002_API_ERR_COMPORT_NOT_WRITEABLE,
  IMD2002_API_ERR_COMPORT_CANT_WRITE,
  IMD2002_API_ERR_COMPORT_CANT_READ,
  IMD2002_API_ERR_COMMAND_NOT_WRITTEN,
  IMD2002_API_ERR_COMMAND_NOT_READ,
  IMD2002_API_ERR_COMMAND_NO_DATA_RECEIVED,
  IMD2002_API_ERR_COMMAND_NO_VALID_FRAME_FOUND,
  IMD2002_API_ERR_COMMAND_RX_FRAME_DAMAGED,
  IMD2002_API_ERR_COMMAND_FAILURE,
  IMD2002_API_ERR_UNDEFINED_READ,
  IMD2002_API_ERR_COMPORT_LESS_DATA_READ,
  IMD2002_API_ERR_COMPORT_SYSTEM_INIT_FAILED,
  IMD2002_API_ERR_COMPORT_SYSTEM_ALREADY_INITIALIZED,
  IMD2002_API_ERR_COMMAND_RX_FRAME_LENGTH,
  IMD2002_API_ERR_COMMAND_MAX_DATA_OVERFLOW,
  IMD2002_API_ERR_COMMAND_MAX_IQPAIRS_OVERFLOW,
  IMD2002_API_ERR_COMMAND_NOT_ACCEPTED,
  IMD2002_API_ERR_NULL_POINTER,
  IMD2002_API_ERR_PARAMETER_OUT_OF_RANGE,
  IMD2002_API_ERR_COMMAND_UNEXPECTED_FRAMETYPE,
  IMD2002_API_ERR_COMMAND_WITH_FAILURE_CODE
} IMD2002_Result_t;

typedef struct {
  float f32_range_m;
  float f32_velocity_mps;
  float f32_signal_dB;
  float f32_estimatedTimeOfArrival_s;
  float f32_incidentAngle_deg;
} IMD2002_Target_t;

typedef struct {
  uint16_t ui16_nrOfTargets;
  uint16_t ui16_targetListId;
  uint8_t ui8_blockageDetected;
  uint8_t ui8_blockageLevel;
  uint16_t ui16_reserved2;
  IMD2002_Target_t target[IMD2002_MAX_TARGETS];
} IMD2002_TargetList_t;

/***********************************************************************
Function: decodes target list frame received from IMD-2002.
Input arguments:
- Frame array: array with from IMD2002 received target list frame
Output arguments:
- targetList: struct with decoded target list
Return value:
- ErrorCode
***********************************************************************/
IMD2002_Result_t IMD2002_decodeTargetFrame(unsigned char *frame_array, IMD2002_TargetList_t *targetList);

}  // namespace IMD_2002
}  // namespace esphome